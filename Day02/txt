Let's learn about GIT Commands 👇

✅ INSTALLATION & GUIS

With platform-specific installers for Git, GitHub also provides the ease of staying up-to-date with the latest releases of the command line tool while providing a graphical user interface for day-to-day interaction, review, and repository synchronization.

➡ GitHub for Windows htps://windows.github.com

➡ GitHub for Mac htps://mac.github.com

➡ For Linux and Solaris platforms, the latest release is available on the official Git website.
➡ Git for All Platforms htp://git-scm.com


✅ SETUP Configuring user information used across all local repositories

➡ git config --global user.name
 “[firstname lastname]” -> set a name that is identifiable for credit when reviewing version history
➡ git config --global user.email
 “[valid-email]” -> set an email address that will be associated with each history marker
➡ git config --global colour.ui -> auto set automatic command line colouring for Git for easy reviewing
➡ git config --list -> Check global configuration details

✅ SETUP & INIT

Configuring user information, initializing and cloning repositories

➡ git init ->initialize an existing directory as a Git repository
➡ git clone [url] ->retrieves an entire repository from a hosted location via UR

✅ SHARE & UPDATE

Retrieving updates from another repository and updating local repos

➡ git remote add [alias] [URL] -> add a git URL as an alias
➡ git fetch [alias] -> fetch down all the branches from that Git remote
➡ git merge [alias]/[branch] -> merge a remote branch into your current branch to bring it up to date
➡ git push [alias] [branch] -> Transmit local branch commits to the remote repository branch
➡ git pull -> to fetch and merge any commits from the tracking remote branch

✅ INSPECT & COMPARE

Examining logs, diffs and object information

➡ git log -> shows the commit history for the currently active branch
➡ git log branchB..branchA -> shows the commits on branchA that are not on branchB
➡ git log --follow [file] -> show the commits that changed the file, even across renames
➡ git diff branchB...branchA -> shows the diff of what is in branchA that is not in branchB
➡ git show [SHA] -> shows any object in Git in a human-readable format